HTTP 1.0(RFC 1945, May 1996)	
-Rapid Growth 
-Richer Metadata
-Content Negotiation
-Authorization
-Cache
-Character set support
HTTP 1.1(RFC 2068 Jan 1997, RFC 2616 June 1999), RFC 7230-7235(June 2014)	
-Resolved Ambiguities
-Change in semantics of HTTP protocol
-Transfer Encoding
-Language Negotiation
- A lot of additional content

HTTP 2(RFC 7540 May 2015)
- Improver Performance
-Lower latency, Higher Throughput
-Transition to embedded devices
-Fast Progress


* HTTP provides an encryption panel
The servers:
The Origin server - It is web server that contained the very First Web Page. 
The Proxy server - It allows you to authenticate and pass to one another until it reaches origin server

Gateways - Gateways can convert protocols and can actually perform in any network later. HTTP traffic can be directed to gateways and then sent to proxies.
Tunnels - A way in which various protocols from the network are encapsulated through the protocol of HTTP. HTTP tunnel applications are available for application software.

HTTP Resource Addressing
HTTP resources are identified using URIs (RFC 3986),or, more specifically, HTTP URLs
The scheme of Http could be either HTTP or HTTPS.
Authority can be achieved through the Uniform Resource Identifier(URI), these are character strings that identify a resource.
User information or authentication credentials(deprecated) - These credentials are needed to access servers which acquire authentication.
Host - The host which hosts the servers and proxies.
domain name (resolved to an IP address using DNS) of the server where the resource resides (or will be created)
Port number - these numbers define what port you are using. The standard port of HTTP is 80.
The path to resource(resolved to the document root on the server)
-Refers to a static or dynamic resource.
Query - The query string is part of the Uniform Resource Locator(URL). It contains data that is not inline with the path structue.
Typically provided as key = value pairs, with ampersan (&) separators between key/value pairs.
May be URL-encoded.
Fragment Identifier - After the hash and URI, This is the string that defines the document's function.  

HTTP Response Message (FROM SERVERS) contains the following:
Status Line (CRLF - terminated the consisting of three space - separated values)
HTTP Protocol - Why is HTTP a protocol that is stateless? They are stateless because each command can be executed independent of the other 
in which one command is not aware of the other comman that was input before it. 
Status Code - These are 3 digit codes to help understand a request. They compose of the status of an HTTP resource which includes redirection, error, and much more! 
The first digit is the one which is the response of a certain class. There are 5: 1(Informational), 2(Success), 3(Redirection), 4(Client), and 5(Server). The next two digits of the code are defined
 and specified from the result of the code.
Reason Phrase - These are the phrases which define the status code that would occur. For example, you achieved 404: meaning the file is not found.
Message Headers (general,response and/or entity headers):
General Headers: General headers of HTTP.
Response headers: The HTTP server responds.
Entity Headers: Entities of the HTTP.
Empty Line - An empty line is somewhat the start of making a code. It is ignored by the servers but it can also be used to separate one portion of code from the other portion for easier checking.
Message Body (optional) - these are bytes of data that transmit HTTP after the headers. 