INTERNET

- internetwork
	INTER
		-crossing boundaries
	NETWORK
		-connecting / connection

IoT
- is any appliance that can connect to the network.
- can be accessed remotely.

Protocols
- are communication standards.
- are rules of communicating into the network.

Serial Connection
- is one wire connecting 2 computers.
- and is also a binary connection.

1960's
- Start of Internet
Research about:
(1) Pocket Switch
- is a single line connection.
- and is more appropriate for computer connection.

(2) Circuit Connection
- is used to establish and maintain the connection.

1972
- this was the year where the first high level application was invented, the Email.


World Wide Web
	- English scientist Tim Berners-Lee invented the World Wide Web in 1989.
	- it is application that uses the infrastructure of the internet.
	- information system on the internet that allows documents to be connected to other documents that would be connected to other documents by hypertext links. This enables the user to search for information by moving from one document to another.

WAIS (Wide Area Information Servers)
 Gopher - The protocol designed for distributing,searching and retrieving documents over the internet.
 Usenet - It is a worldwide distributed discussion system available on computers.
 
 
 HTTP (HyperText Markup Language)
  - application layer communications protocol used to access resources(hypertext/hypermedia) on the World Wide Web.
  - it was invented by Tim Berners-Lee.
  - jointly developed by the W3C and the IETF.
  
Version History:
  - HTTP 0.9(1991)
  	1.connection
	2.request
	3.response
	4.disconnection
  - HTTP 1.0(RFC 1945, May 1996)
  - HTTP 1.1(RFC 2068 Jan 1997, RFC 2616 June 1999), RFC 7230-7235(June 2014)
  - HTTP 2(RFC 7540 May 2015)
  	SPDY - invented by google
  
 HTTP Fundamentals
  - HTTP runs on top of TCP/IP, using TCP port 80 by default or TCP port 443 for HTTPS(HTTP over SSL/TLS).
  - HTTP is based on a client-server architecture.
     - clients a.k.a. user agents(UA):
     	- web browsers, web crawlers/spiders, other end user tools and applications
  - HTTP provides an encryption panel
     - servers
     	- origin servers
	- proxy servers, gateways, tunnels
	 *proxy servers--- allows yout to authenticate pass to one another until it reaches origin server.
  - HTTP uses a request-response standard protocol
	- the client sends an HTTP request message to the server.
	- the server processes the request and replies with an HTTP response message.
  - HTTP is a stateless communications protocol
	- servers do not keep information about clients in-between requests.	
  - HTTP provides support for other functionalities, such as;
	-Cache Control - storoge that is available locally
	-Content Media Type - is a two-part identifier for file formats and format contents transmitted on the Internet.
	-Language and character set specification
	ex.- ascii(8 bit representation), UNICODE(multi-byte)
	-Content/transfer coding - when you sent something it will be recieve as is
	-Content negotiation - if the other one can't recieve the zip file then don`t send it as a zip file. It must specify which version should fit its capabilities the best.
	-Persistent Connection introduce in Protocol 1.1 - The idea of this is to send and recieve multiple http request using only single TCP connection.
	-Request pipelining
	-Authentication/Authorization

HTTP Resource Addressing
  - HTTP resources are identified using URIs (RFC 3986),or, more specifically, HTTP URLs
	- scheme(http or https)
	- authority
		- user information or authentication credentials(deprecated)
		- host
		     - domain name (resolved to an IP address using DNS) of the server where the resource resides (or will be created)
		- port number
	- path to resource(resolved to the document root on the server)
		- may refer to a static or dynamic resource.
	- query
		- typically provided as key = value pairs, with ampersan (&) separators between key/value pairs.
		- may be URL-encoded.
	- Fragment Identifier


HTTP Request Message 
  	Request Line (CRLF - terminated line consisting of three space -separated values)
		- Method
	        - Request URL
		- HTTP Protocol Version
 	Message Headers (general,request and/or entity headers)
		- HTTP 1.1 requires atleast the host ......
			-General
			-Request
			-Response
			-Entity
	Empty Line (CRLF)
	Message Body a.k.a.payload(optional)

8 Standard Methods

1. GET	-Transfer a current selected representation of the resource identified by the request URI
	- Fetch resources
2. HEAD - same as GET with one difference (returns only the statusline and the headers)
	- used to retrieve metadata about the entity implied by the request without transferring the entity itself
3. PUT  - store the enclosed entity in the message body under the specified request URI
4. OPTIONS - tell you what you can do or request information about communication
5. TRACE   - used to request a loop-back of the request message
	   - used for testing/diagnostics of the request/response chain
6. CONNECT - use only for HTTPS communication
	   - request the establishment of a tunel to the destination origin server, and if successful thereafter restrict its behavior
	   to blind forwarding of packets

safemethod,idempotent method,cacheable method
*Safe Method - doesn't make ang change
*Idempotent Method - you can use a method multiple times but get the same result

General Header Fields
	--usable by client and server
cache control - allow us to control caching and the information won't be saved
connection- used to establish persistent connection
date - to control the lifetime of cache resources
pragma - general directive in older version of HTTP
Trailer - header that is pass/provided after the data
Transfer-encoding - to notify the server it expects to receive additional fields in the trailer
Upgrade - to switch to a different protocol
via - where the message was passed
warning - general warning about possible problems with the entity body

